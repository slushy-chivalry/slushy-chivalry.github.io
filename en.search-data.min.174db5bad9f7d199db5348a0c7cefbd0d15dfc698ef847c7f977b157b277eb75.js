'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/','title':"Blog",'content':""});index.add({'id':1,'href':'/posts/partitions-and-selectors/','title':"Partitions and Selectors",'content':"Look at this interesting stuff\nLet I be a finite set, X be another set\nI -\u0026gt; X is a selector function X -\u0026gt; I is a partition function\nfor example, Let I = {0, 1}, X = N\nf: {0, 1} -\u0026gt; N selects two natural numbers g: N -\u0026gt; {0, 1} partitions N into two subsets\nnow, what happenes if we categorify this notion\nI becomes a discrete category \u0026ndash; elements as objects, only identity morphisms X becomes a category of all sets\nfunctions become functors\nF : I -\u0026gt; Sets G : Sets -\u0026gt; I\nbut now, F does what g used to do -\u0026gt; it selects a sets, essentially selecting a partition for a particular set\nthe set is not guaranteed to be a subset of a given set\n what happens if we turn I into a poset category? what happens if we turn X into a poset category? (treating a set A as a poset, ordered by inclusion, with elements as objects and inclusions as morphisms)  let\u0026rsquo;s go even further \u0026ndash; what we really did here is defined a functor H : Sets -\u0026gt; Cat turning each set into a category (I becomes a discrete category, X becomes a Sets category)\n"});})();